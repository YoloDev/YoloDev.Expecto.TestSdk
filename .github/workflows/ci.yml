name: CI

on:
  - push
  - pull_request

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - windows-latest
          - ubuntu-latest

    env:
      DOTNET_NOLOGO: "true"
      DOTNET_CLI_TELEMETRY_OPTOUT: "true"
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔽 Setup dotnet 2.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "2.1.x"

      - name: 🔽 Setup dotnet 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: 🔽 Setup dotnet from global.json
        uses: actions/setup-dotnet@v1

      - name: 🔽 Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: "5.x"

      - name: 🔍 Print dotnet info
        run: dotnet --info

      - name: 🔍 Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
        with:
          useConfigFile: true

      - name: 🔽 Restore
        run: dotnet restore -p:Configuration=Release

      - name: 🔨 Build
        run: dotnet build --configuration Release

      - name: 🧪 Test
        run: dotnet test --no-build --configuration Release

      - name: 📦 Pack
        run: dotnet pack --configuration Release --no-build
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: 🔼 Upload packages as artifact
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: nuget
          path: artifacts/nuget/

      - name: 🔼 Upload global.json as artifact
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: global-json
          path: global.json
